{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo API",
    "version": "1.0.0",
    "description": "A simple Todo API with JWT authentication and Mongoose"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "format": "password" }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "completed": { "type": "boolean", "default": false },
          "user": { "type": "string" }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "task": { "$ref": "#/components/schemas/Task" }
        }
      },
      "TasksResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Task" }
          }
        }
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks for the logged-in user",
        "tags": ["Tasks"],
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TasksResponse" }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "tags": ["Tasks"],
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          },
          "400": { "description": "Validation error" }
        }
      }
    },
    "/tasks/{id}": {
      "put": {
        "summary": "Update a task",
        "tags": ["Tasks"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "completed": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskResponse" }
              }
            }
          },
          "404": { "description": "Task not found" }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "tags": ["Tasks"],
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "task": { "$ref": "#/components/schemas/Task" }
                  }
                }
              }
            }
          },
          "404": { "description": "Task not found" }
        }
      }
    }
  }
}
